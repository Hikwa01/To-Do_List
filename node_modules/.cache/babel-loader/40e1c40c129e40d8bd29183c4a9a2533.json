{"ast":null,"code":"import _slicedToArray from \"E:\\\\React\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\React\\\\my-app\\\\src\\\\components\\\\Todo.js\";\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nvar Todo = function Todo(_ref) {\n  var todos = _ref.todos,\n      completeTodo = _ref.completeTodo,\n      removeTodo = _ref.removeTodo,\n      updateTodo = _ref.updateTodo;\n\n  var _useState = useState({\n    id: null,\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var submitUpdate = function submitUpdate(value) {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return todos.map(function (todo, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: todo.id,\n      onClick: function onClick() {\n        return completeTodo(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n      onClick: function onClick() {\n        return removeTodo(todo.id);\n      },\n      className: \"delete-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TiEdit, {\n      onClick: function onClick() {\n        return setEdit({\n          id: todo.id,\n          value: todo.text\n        });\n      },\n      className: \"edit-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    })));\n  });\n};\n\nexport default Todo;","map":{"version":3,"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"sources":["E:/React/my-app/src/components/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqD;EAAA,IAAlDC,KAAkD,QAAlDA,KAAkD;EAAA,IAA3CC,YAA2C,QAA3CA,YAA2C;EAAA,IAA7BC,UAA6B,QAA7BA,UAA6B;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAAA,gBACxCR,QAAQ,CAAC;IAC/BS,EAAE,EAAE,IAD2B;IAE/BC,KAAK,EAAE;EAFwB,CAAD,CADgC;EAAA;EAAA,IACzDC,IADyD;EAAA,IACnDC,OADmD;;EAMhE,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAH,KAAK,EAAI;IAC5BF,UAAU,CAACG,IAAI,CAACF,EAAN,EAAUC,KAAV,CAAV;IACAE,OAAO,CAAC;MACNH,EAAE,EAAE,IADE;MAENC,KAAK,EAAE;IAFD,CAAD,CAAP;EAID,CAND;;EAQA,IAAIC,IAAI,CAACF,EAAT,EAAa;IACX,oBAAO,oBAAC,QAAD;MAAU,IAAI,EAAEE,IAAhB;MAAsB,QAAQ,EAAEE,YAAhC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACD;;EAED,OAAOR,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;IAAA,oBACf;MACE,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;MAEE,GAAG,EAAED,KAFP;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAIE;MAAK,GAAG,EAAED,IAAI,CAACN,EAAf;MAAmB,OAAO,EAAE;QAAA,OAAMH,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB;MAAA,CAA5B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGM,IAAI,CAACG,IADR,CAJF,eAOE;MAAK,SAAS,EAAC,OAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,iBAAD;MACE,OAAO,EAAE;QAAA,OAAMX,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB;MAAA,CADX;MAEE,SAAS,EAAC,aAFZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,eAKE,oBAAC,MAAD;MACE,OAAO,EAAE;QAAA,OAAMG,OAAO,CAAC;UAAEH,EAAE,EAAEM,IAAI,CAACN,EAAX;UAAeC,KAAK,EAAEK,IAAI,CAACG;QAA3B,CAAD,CAAb;MAAA,CADX;MAEE,SAAS,EAAC,WAFZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EALF,CAPF,CADe;EAAA,CAAV,CAAP;AAoBD,CAtCD;;AAwCA,eAAed,IAAf"},"metadata":{},"sourceType":"module"}